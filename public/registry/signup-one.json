{
  "name": "signup-one",
  "type": "registry:block",
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport Buttons from \"../buttons/basicButton\";\r\n\r\ntype SignupProps = {\r\n  title?: string;\r\n  className?: string;\r\n};\r\n\r\nconst Signup: React.FC<SignupProps> = ({\r\n  title = \"Create a new account\",\r\n  className = \"\",\r\n}) => {\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const fullName = (e.currentTarget.elements.namedItem(\"full-name\") as HTMLInputElement)?.value;\r\n    const email = (e.currentTarget.elements.namedItem(\"email\") as HTMLInputElement)?.value;\r\n    const password = (e.currentTarget.elements.namedItem(\"password\") as HTMLInputElement)?.value;\r\n    const confirmPassword = (e.currentTarget.elements.namedItem(\"confirm-password\") as HTMLInputElement)?.value;\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-center justify-center min-h-screen bg-gray-100 ${className}`}>\r\n      <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-lg transform transition-all duration-500 hover:shadow-2xl hover:scale-105\">\r\n        <h2 className=\"text-2xl font-bold text-center text-gray-900\">{title}</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"full-name\" className=\"block text-sm font-medium text-gray-700\">\r\n              Full Name\r\n            </label>\r\n            <input\r\n              id=\"full-name\"\r\n              name=\"full-name\"\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Enter your full name\"\r\n              className=\"block w-full px-4 py-2 mt-1 text-gray-900 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              required\r\n              placeholder=\"Enter your email\"\r\n              className=\"block w-full px-4 py-2 mt-1 text-gray-900 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n              Password\r\n            </label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"Create a password\"\r\n              className=\"block w-full px-4 py-2 mt-1 text-gray-900 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"confirm-password\" className=\"block text-sm font-medium text-gray-700\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              id=\"confirm-password\"\r\n              name=\"confirm-password\"\r\n              type=\"password\"\r\n              required\r\n              placeholder=\"Confirm your password\"\r\n              className=\"block w-full px-4 py-2 mt-1 text-gray-900 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500\"\r\n            />\r\n          </div>\r\n          <Buttons type=\"submit\" variant=\"primary\" size=\"m\" className=\"w-full\">\r\n            Sign Up\r\n          </Buttons>\r\n        </form>\r\n        <p className=\"text-sm text-center text-gray-600\">\r\n          Already have an account?{\" \"}\r\n          <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n            Log in\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n",
      "path": "ui/cards/signup.tsx",
      "target": "components/ui/cards/signup.tsx"
    },
    {
      "type": "registry:ui",
      "content": "import React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport clsx from \"clsx\";\r\n\r\n// 1. Define variants using cva\r\nconst buttonVariants = cva(\r\n  \" cursor-pointer text-white font-bold shadow-md\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-gray-600\",\r\n        destructive: \"bg-[#ED0800]\",\r\n        primary: \"bg-teal-600\",\r\n        yellow:\"bg-[#ffbd03]\",\r\n        chai:\"bg-[#Ab784E]\",\r\n        lavender:\"bg-[#a881af]\",\r\n        purple:\"bg-[#80669d]\",\r\n        teal:\"bg-[#5adbb5]\",\r\n        green:\"bg-[#33b249]\",\r\n        sky:\"bg-[#55c2da]\",\r\n        blue:\"bg-[#5783db]\",\r\n        facebook:\"bg-[#4681f4]\",\r\n        stroke:\"bg-none border border-gray-800\"\r\n      },\r\n      size: {\r\n        sdot:\"h-8 w-8 text-[8px]\",\r\n        dot:\"h-15 w-15 text-[15px]\",\r\n        sm:\"h-6 w-12 text-[12px]\",\r\n        m:\"h-10 w-20 text-[15px]\",\r\n        default: \"h-12 w-42 text-[20px]\",\r\n        xl: \"h-12 w-62 text-[24px]\",\r\n        \r\n      },\r\n      rounded:{\r\n        circle:\"rounded-full\",\r\n        medium:\"rounded-md\",\r\n        low:\"rounded-lg\",\r\n        rectangle:\"rounded-none\",\r\n        small:\"rounded-sm\"\r\n      },\r\n      hover:{\r\n        float:\"transition transform duration-300 hover:-translate-y-1 hover:scale-105 hover:shadow-xl\",\r\n        rotate:\"transition-transform duration-500 hover:rotate-6 \",\r\n        slide:\"hover:transition-transform hover:duration-500 hover:bg-white hover:text-black\",\r\n        shadow:\"bg-gray-800 text-white px-4 py-2 rounded-md transition-all duration-200 hover:-translate-y-2 hover:shadow-[0_10px_25px_rgba(0,0,0,0.5)] active:translate-y-0 active:shadow-[0_4px_10px_rgba(0,0,0,0.2)] focus:outline-none focus:ring-2 focus:ring-blue-400 dark:bg-gray-700 dark:text-white dark:hover:shadow-[0_10px_25px_rgba(255,255,255,0.2)]\",\r\n        ring:\"bg-gray-800 text-white px-4 py-2 rounded-md transition duration-300 hover:ring-4 hover:ring-gray-100 dark:bg-gray-700 dark:text-white dark:hover:ring-gray-800\"\r\n      },\r\n      disabled:{\r\n        true:\"cursor-not-allowed hover:opacity-50 \",  \r\n      }\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n      rounded:\"low\",\r\n      hover:\"float\"\r\n    },\r\n  }\r\n);\r\n\r\n// 2. Define props type using VariantProps + button props\r\ntype AllButtonsProps = React.ButtonHTMLAttributes<HTMLButtonElement> &\r\n  VariantProps<typeof buttonVariants>;\r\n\r\n// 3. Create a reusable button\r\nexport default function Buttons({\r\n  variant,\r\n  size,\r\n  rounded,\r\n  hover,\r\n  disabled,\r\n  className,\r\n\r\n  ...props\r\n}: AllButtonsProps) {\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={twMerge(clsx(buttonVariants({ variant, size,rounded , hover,disabled }), className))}\r\n    />\r\n  );\r\n}\r\n",
      "path": "ui/buttons/basicButton.tsx",
      "target": "components/ui/buttons/basicButton.tsx"
    }
  ]
}